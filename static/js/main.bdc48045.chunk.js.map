{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","lastKeyPressed","setLastKeyPressed","useEffect","handlerDocumentKeyboardPress","event","key","document","addEventListener","removeEventListener","className","ReactDOM","render","getElementById"],"mappings":"sLAEaA,EAAgB,WAC3B,MAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAcA,OAZAC,qBAAU,WACR,IAAMC,EAA+B,SAACC,GACpCH,EAAkBG,EAAMC,MAK1B,OAFAC,SAASC,iBAAiB,UAAWJ,GAE9B,WACLG,SAASE,oBAAoB,UAAWL,OAK1C,qBAAKM,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAc,mCACkBA,EADlB,KAEV,+B,MCjBbU,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.bdc48045.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport const App: React.FC = () => {\n  const [lastKeyPressed, setLastKeyPressed] = useState('');\n\n  useEffect(() => {\n    const handlerDocumentKeyboardPress = (event: KeyboardEvent) => {\n      setLastKeyPressed(event.key);\n    };\n\n    document.addEventListener('keydown', handlerDocumentKeyboardPress);\n\n    return () => {\n      document.removeEventListener('keydown', handlerDocumentKeyboardPress);\n    };\n  });\n\n  return (\n    <div className=\"App\">\n      <p className=\"App__message\">\n        {lastKeyPressed\n          ? (`The last pressed key is [${lastKeyPressed}]`)\n          : ('Nothing was pressed yet')}\n      </p>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}