{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","lastKeyPressed","handlerKeyboardPress","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,eAAgB,IAFpB,EAaEC,qBAAuB,SAACC,GACtB,EAAKC,SAAS,CACZH,eAAgBE,EAAME,OAf5B,uDAKE,WACEC,SAASC,iBAAiB,UAAWC,KAAKN,wBAN9C,kCASE,WACEI,SAASG,oBAAoB,UAAWD,KAAKN,wBAVjD,oBAmBE,WACE,IAAQD,EAAmBO,KAAKR,MAAxBC,eAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAc,mCACkBA,EADlB,KAEV,kCA3Bf,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.7b82b1ad.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  lastKeyPressed: string\n};\n\nexport class App extends React.Component<State> {\n  state: State = {\n    lastKeyPressed: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handlerKeyboardPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handlerKeyboardPress);\n  }\n\n  handlerKeyboardPress = (event: KeyboardEvent) => {\n    this.setState({\n      lastKeyPressed: event.key,\n    });\n  };\n\n  render() {\n    const { lastKeyPressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {lastKeyPressed\n            ? (`The last pressed key is [${lastKeyPressed}]`)\n            : ('Nothing was pressed yet')}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}